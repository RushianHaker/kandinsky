/*---------------------------------------------------------
 Presets (_presets.scss)
-------------------------------------------------------- */

//Fonts
$body:	     'SourceSansPro', Arial, sans-serif; 
$heading:    'Exo2', Arial, sans-serif;
$title:      $heading;
$nav:        $body;

$sans:       'Open Sans',Arial, sans-serif;
$mono: 	     "Lucida Sans Typewriter", "Lucida Console", Monaco, monospace;


//Break points
$one: 	       480px; //small
$two:          800px; //medium
$three:        1104px; //large

//Page layout
$full_cont:    1104px;
$page_cont:    720px;
$col:		   48px;
$gut:	       48px;
$flex-gut:     $gut;
$inner_cont:   $page_cont;
$text_cont:    $page_cont;



//Baseline
$base: 26px;

//Colors

// color-line
$color-blue:                #00bcd4;
$color-yellow:              #ffc914;
$color-dark-bg:             #0e0a2b;
$color-bg-light:        	#eeeeee;

:root {
/*
    --knd-color-main:         $color-blue;
    --knd-color-main-dark:    darken($color-blue, 10%);
    
    --knd-color-second:       $color-yellow;
    --knd-color-second-dark:  darken($color-yellow, 10%);
    
    --knd-color-third:        $color-dark-bg;
    --knd-color-third-dark:   darken($color-dark-bg, 10%);;
    
    --knd-text1-color:        #000000;
    --knd-text2-color:        #000000;
    --knd-text2-color-dark:   #000000;

    --knd-text3-color:        #000000;
    --knd-text3-color-dark:   #000000;
*/
}

//Variables of color scheme
$color-link-three: var(--knd-color-main); //this is the main scheme color
$color-link-one:   var(--knd-color-main-dark); //hover state
$color-link-two:   var(--knd-color-main-dark); //hover state 

//others color variables - clear unused colors!!!
$color-text:                var(--knd-text1-color);

$color-page-bg:            var(--knd-page-bg-color);
$color-page-bg-dark:       var(--knd-page-bg-color-dark);
$color-page-text:          var(--knd-page-text-color);
$color-page-text-light:    var(--knd-page-text-color-light);

$color-white:               #ffffff;
$color-text-white:          $color-white;
$color-text-black:          #000000;
$color-text-semi:			#666666;
$color-text-light:			#999999;

$color-secondary:			$color-bg-light;
$color-secondary-alt:		$color-bg-light;
$color-secondary-dark:		$color-dark-bg;


$color-border-normal:   #dfdfdf;
$color-border-light:    #eeeeee;
$color-border-link:     #eeeeee;
$color-border-dark:     #5d5d5d;
$color-form-invalid:    #ED1C24;
$color-bg-dark-gray:    #353535;

$leyka_green : #1DB318;

//Layout Settings
$adminbar_large_screen: 32px;
$adminbar_small_screen: 46px;

//Element
$indent: 1.55em;
$rule: 	 1px solid $color-border-normal;
$fixed_side: 222px;
$margin_base: 26px;


/** Helpers **/
	
@mixin hidden { //Hide for both screenreaders and browsers
	display: none;
	visibility: hidden; }

@mixin visuallyhidden { //Hide only visually, but have it available for screenreaders
	position : absolute;
	clip : rect(0 0 0 0); 
	overflow : hidden;
	margin: -1px;
	padding : 0;
	height : 1px;      
	width : 1px;
	border : 0; }

@mixin image-replace {
	font: 0/0 a;
	text-shadow: none;
	color: transparent;
	text-decoration: none;
}

@mixin screen-reader {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px, 1px, 1px, 1px);
}

.screen-reader-text {
	@include screen-reader();
}

@mixin no-select {
	-webkit-user-select: none;
	   -moz-user-select: none;
	   	-ms-user-select: none;
	   		user-select: none;
}

@function value_from_map($key, $map) {
	@if map-has-key($map, $key) {
		@return map-get($map, $key);
	}

	@warn "Unknown '#{$key}' in $map.";
	@return null;
}


/* MQ */
@mixin for($media) {
	@if $media == small-screens {
		@media screen and (min-width: $one) { @content; }
	}
	@else if $media == medium-screens {
		@media screen and (min-width: $two) { @content; }
	}
	@else if $media == large-screens {
		@media screen and (min-width: $three) { @content; }
	}
}

@mixin upto($media) {
	@if $media == small-screens {
		@media screen and (max-width: $one - 1) { @content; }
	}
	@else if $media == medium-screens {
		@media screen and (max-width: $two - 1) { @content; }
	}
	@else if $media == large-screens {
		@media screen and (max-width: $three - 1) { @content; }
	}
}


/** Type - remove them should be in _typo.scss */
// Typo - Find and replace with actual one then remove
@mixin body-text($mod: default) {
	font-family: $body;
	font-weight: 400;
    @include ms-respond(font-size, 0);
    line-height: 1.5;
	
	@include for(medium-screens) {
		@include ms-respond(font-size, 1);
		line-height: 1.45;
	}
		
	@if $mod == summary {		
		@include ms-respond(font-size, -1);
		line-height: 1.5;
		
		@include for(medium-screens) {
            @include ms-respond(font-size, 0);
			line-height: 1.5;
		}		
	}
	@else if $mod == semi {		
		font-size: 15px;	
		line-height: 1.35;
		
		@include for(medium-screens) {
			font-size: 16px;	
			line-height: 1.4;
		}	
	}
	@else if $mod == larger {
		font-size: 18px;	
		line-height: 1.45;
		
		@include for(medium-screens) {
			font-size: 21px;	
			line-height: 1.45;
		}	
	}
	@if $mod == small {		
		font-size: 12px;	
		line-height: 1.45;
		
		@include for(medium-screens) {
			@include ms-respond(font-size, 0);	
			line-height: 1.45;
		}		
	}
}

@mixin nav-text($mod: default) {
	
	@include knd-nav-text();
	
	text-transform: uppercase;
	font-weight: normal;
	
	@if $mod == multiline {
		line-height: 20px;
	}
	@else if $mod == meta {
		font-size: 16px;
		line-height: 16px;
	}
	@else if $mod == meta_small {
		font-size: 14px;
		line-height: 16px;
	}
	@else if $mod == menu {
		font-size: 16px;
		letter-spacing: 0.5px;
		font-weight: 700;
	}
	@else if $mod == lowercase {		
		text-transform: none;
	}
}

@mixin sub-title($mod: default) {		
	font-family: $sans;
	font-weight: normal;
	text-transform: uppercase;
	letter-spacing: normal;
	color: $color-text-semi;
		
	font-size: 12px;	
	line-height: 1.5;
	
	@if $mod == small {				
		font-size: 11px;		
	}
	@else if $mod == extend {
		font-size: 14px;
	}
}

@mixin form-text($mod: default) {	
	font-family: $sans;
	color: $color-text;
	font-weight: normal;
	text-transform: none;
	letter-spacing: normal;
	
	font-size: 14px;	
	line-height: 1.5;
	
	@if $mod == small {
		font-size: 12px;
	}
	@if $mod == semi {
		font-size: 16px;
	}
}


@mixin header-title($mod: default){
	font-family: $heading;
	color: $color-page-text;
	font-weight: normal;
	text-transform: uppercase;
	
	font-size: 16px;	
	line-height: 1.5;
	
	
	@if $mod == section {
		font-size: 42px;
		@include for(large-screens) { font-size: 54px; }
		line-height: 1.1;
	}
	@if $mod == single {
		font-size: 36px;
		@include for(medium-screens) { font-size: 42px; }
		@include for(large-screens) { font-size: 54px; }
		line-height: 1.05;
	}
	@else if $mod == widget {
		font-size: 27px;
		line-height: 1.2;
	}
	@else if $mod == head_title {
		font-size: 40px;
		line-height: 1.2;
	}
	@else if $mod == quote_title {
		font-size: 36px;		
		line-height: 1.2;
	}
}



/* Elements */
@mixin button($mod: default){
    @include knd-button-caption-text();
    
	display: inline-block;
	color: $color-white;
	background: $color-link-three;
	border: 1px solid $color-link-three;	
	transition: all 0.3;
    text-align:center;
	
	padding: 6px 16px;
	@include for(small-screens) {
        padding: 12px 35px;
    }
	
	&:visited {
		color: $color-white;
	}
	&:hover, &:focus, &:active {
		//background: darken($color-link-three, 10%);
		background: $color-link-two;
		color: $color-white;
		border-color: $color-link-two;
	}
	
	@if $mod == white {
		background: $color-white;
		border: 1px solid $color-white;
		color: $color-link-three;
		&:visited { color: $color-link-three; }
		
		&:hover, &:focus, &:active {			
			background: $color-link-two;
			color: $color-white;
			border-color: $color-link-two;
		}
	}
	@else if $mod == leyka {
		background: $leyka_green;
		border: 1px solid $leyka_green;
		
		&:hover, &:focus, &:active {			
			background: darken($leyka_green, 10%);
			border-color: darken($leyka_green, 10%);			
		}
	}
}



@mixin ghost-button($size: 16px, $color: #fff, $hover_text: #000) {
	font-family: $nav;
	font-size: $size;
	text-transform: uppercase;	
	display: inline-block;
	padding: 0.5em 1.3em;
	color: $color;
	border: 2px solid $color;	
	transition: all 0.3s;
	
	&:visited {
		color: $color;
	}
	&:hover, &:focus, &:active {
		background: $color;
		color: $hover_text;
	}
}


@mixin container-extended() {
	margin: 0 -4.35%;
	position: relative;
	width: auto;
	
	& > div[id *="pl-"],
	& > div[class *="so-widget"] {
		max-width: $page_cont;
		width: 92%;
		margin: 0 auto;
	}
	
	$ex_cont_width_mq: $page_cont / 0.92 + 1px;
	@media screen and (min-width: $ex_cont_width_mq ) { 
		margin: 0 -1 * ($full_cont - $page_cont) / 2;	
	}
	
}

@mixin vertical-image-header-fixed(){
	//60vh;
	height: 360px;
	
	@include for(small-screens) {
		height: 400px;
	}
	
	@include for(medium-screens) {
		height: 460px;
	}
	
	@include for(large-screens) {
		height: 480px;
	}
}
	

